C     -*- fortran -*-
C     This file is autogenerated with f2py (version:2)
C     It contains Fortran 77 wrappers to fortran functions.

      subroutine f2pywrapcalc_lk_gaussian (x1, x2, zs1, zs2, nas1,
     & nas2, zmax, iab, sigmas, nm1, nm2, nsigmas, kernels, f2py_x1_d0, 
     &f2py_x1_d1, f2py_x2_d0, f2py_x2_d1, f2py_zs1_d0, f2py_zs2_d0, f2py
     &_nas1_d0, f2py_nas2_d0, f2py_sigmas_d0, f2py_sigmas_d1)
      integer zmax
      logical iab
      integer nm1
      integer nm2
      integer nsigmas
      integer f2py_x1_d0
      integer f2py_x1_d1
      integer f2py_x2_d0
      integer f2py_x2_d1
      integer f2py_zs1_d0
      integer f2py_zs2_d0
      integer f2py_nas1_d0
      integer f2py_nas2_d0
      integer f2py_sigmas_d0
      integer f2py_sigmas_d1
      real(kind=8) x1(f2py_x1_d0,f2py_x1_d1)
      real(kind=8) x2(f2py_x2_d0,f2py_x2_d1)
      integer zs1(f2py_zs1_d0)
      integer zs2(f2py_zs2_d0)
      integer nas1(f2py_nas1_d0)
      integer nas2(f2py_nas2_d0)
      real(kind=8) sigmas(f2py_sigmas_d0,f2py_sigmas_d1)
      real(kind=8) kernels(nsigmas,nm1,nm2)
      interface
      subroutine calc_lk_gaussian(x1,x2,zs1,zs2,nas1,nas2,zmax,iab
     &,sigmas,nm1,nm2,nsigmas,kernels) 
          real(kind=8), dimension(:,:),intent(in) :: x1
          real(kind=8), dimension(:,:),intent(in) :: x2
          integer, dimension(:),intent(in) :: zs1
          integer, dimension(:),intent(in) :: zs2
          integer, dimension(:),intent(in) :: nas1
          integer, dimension(:),intent(in) :: nas2
          integer, intent(in) :: zmax
          logical, intent(in) :: iab
          real(kind=8), dimension(:,:),intent(in) :: sigmas
          integer, intent(in) :: nm1
          integer, intent(in) :: nm2
          integer, intent(in) :: nsigmas
          real(kind=8), dimension(nsigmas,nm1,nm2),intent(out) :: 
     &kernels
      end subroutine calc_lk_gaussian
      end interface
      call calc_lk_gaussian(x1, x2, zs1, zs2, nas1, nas2, zmax, ia
     &b, sigmas, nm1, nm2, nsigmas, kernels)
      end


      subroutine f2pywrapcalc_lk_laplacian (x1, x2, nas1, nas2, si
     &gmas, nm1, nm2, nsigmas, kernels, f2py_x1_d0, f2py_x1_d1, f2py_x2_
     &d0, f2py_x2_d1, f2py_nas1_d0, f2py_nas2_d0, f2py_sigmas_d0)
      integer nm1
      integer nm2
      integer nsigmas
      integer f2py_x1_d0
      integer f2py_x1_d1
      integer f2py_x2_d0
      integer f2py_x2_d1
      integer f2py_nas1_d0
      integer f2py_nas2_d0
      integer f2py_sigmas_d0
      real(kind=8) x1(f2py_x1_d0,f2py_x1_d1)
      real(kind=8) x2(f2py_x2_d0,f2py_x2_d1)
      integer nas1(f2py_nas1_d0)
      integer nas2(f2py_nas2_d0)
      real(kind=8) sigmas(f2py_sigmas_d0)
      real(kind=8) kernels(nsigmas,nm1,nm2)
      interface
      subroutine calc_lk_laplacian(x1,x2,nas1,nas2,sigmas,nm1,nm2,
     &nsigmas,kernels) 
          real(kind=8), dimension(:,:),intent(in) :: x1
          real(kind=8), dimension(:,:),intent(in) :: x2
          integer, dimension(:),intent(in) :: nas1
          integer, dimension(:),intent(in) :: nas2
          real(kind=8), dimension(:),intent(in) :: sigmas
          integer, intent(in) :: nm1
          integer, intent(in) :: nm2
          integer, intent(in) :: nsigmas
          real(kind=8), dimension(nsigmas,nm1,nm2),intent(out) :: 
     &kernels
      end subroutine calc_lk_laplacian
      end interface
      call calc_lk_laplacian(x1, x2, nas1, nas2, sigmas, nm1, nm2,
     & nsigmas, kernels)
      end


      subroutine f2pywrapcalc_vector_kernels_laplacian (x1, x2, na
     &s1, nas2, sigmas, nm1, nm2, nsigmas, kernels, f2py_x1_d0, f2py_x1_
     &d1, f2py_x1_d2, f2py_x2_d0, f2py_x2_d1, f2py_x2_d2, f2py_nas1_d0, 
     &f2py_nas2_d0, f2py_sigmas_d0)
      integer nm1
      integer nm2
      integer nsigmas
      integer f2py_x1_d0
      integer f2py_x1_d1
      integer f2py_x1_d2
      integer f2py_x2_d0
      integer f2py_x2_d1
      integer f2py_x2_d2
      integer f2py_nas1_d0
      integer f2py_nas2_d0
      integer f2py_sigmas_d0
      real(kind=8) x1(f2py_x1_d0,f2py_x1_d1,f2py_x1_d2)
      real(kind=8) x2(f2py_x2_d0,f2py_x2_d1,f2py_x2_d2)
      integer nas1(f2py_nas1_d0)
      integer nas2(f2py_nas2_d0)
      real(kind=8) sigmas(f2py_sigmas_d0)
      real(kind=8) kernels(nsigmas,nm1,nm2)
      interface
      subroutine calc_vector_kernels_laplacian(x1,x2,nas1,nas2,sig
     &mas,nm1,nm2,nsigmas,kernels) 
          real(kind=8), dimension(:,:,:),intent(in) :: x1
          real(kind=8), dimension(:,:,:),intent(in) :: x2
          integer, dimension(:),intent(in) :: nas1
          integer, dimension(:),intent(in) :: nas2
          real(kind=8), dimension(:),intent(in) :: sigmas
          integer, intent(in) :: nm1
          integer, intent(in) :: nm2
          integer, intent(in) :: nsigmas
          real(kind=8), dimension(nsigmas,nm1,nm2),intent(out) :: 
     &kernels
      end subroutine calc_vector_kernels_laplacian
      end interface
      call calc_vector_kernels_laplacian(x1, x2, nas1, nas2, sigma
     &s, nm1, nm2, nsigmas, kernels)
      end


      subroutine f2pywrapcalc_vector_kernels_gaussian (x1, x2, nas
     &1, nas2, sigmas, nm1, nm2, nsigmas, kernels, f2py_x1_d0, f2py_x1_d
     &1, f2py_x1_d2, f2py_x2_d0, f2py_x2_d1, f2py_x2_d2, f2py_nas1_d0, f
     &2py_nas2_d0, f2py_sigmas_d0)
      integer nm1
      integer nm2
      integer nsigmas
      integer f2py_x1_d0
      integer f2py_x1_d1
      integer f2py_x1_d2
      integer f2py_x2_d0
      integer f2py_x2_d1
      integer f2py_x2_d2
      integer f2py_nas1_d0
      integer f2py_nas2_d0
      integer f2py_sigmas_d0
      real(kind=8) x1(f2py_x1_d0,f2py_x1_d1,f2py_x1_d2)
      real(kind=8) x2(f2py_x2_d0,f2py_x2_d1,f2py_x2_d2)
      integer nas1(f2py_nas1_d0)
      integer nas2(f2py_nas2_d0)
      real(kind=8) sigmas(f2py_sigmas_d0)
      real(kind=8) kernels(nsigmas,nm1,nm2)
      interface
      subroutine calc_vector_kernels_gaussian(x1,x2,nas1,nas2,sigm
     &as,nm1,nm2,nsigmas,kernels) 
          real(kind=8), dimension(:,:,:),intent(in) :: x1
          real(kind=8), dimension(:,:,:),intent(in) :: x2
          integer, dimension(:),intent(in) :: nas1
          integer, dimension(:),intent(in) :: nas2
          real(kind=8), dimension(:),intent(in) :: sigmas
          integer, intent(in) :: nm1
          integer, intent(in) :: nm2
          integer, intent(in) :: nsigmas
          real(kind=8), dimension(nsigmas,nm1,nm2),intent(out) :: 
     &kernels
      end subroutine calc_vector_kernels_gaussian
      end interface
      call calc_vector_kernels_gaussian(x1, x2, nas1, nas2, sigmas
     &, nm1, nm2, nsigmas, kernels)
      end


      subroutine f2pywrapfgaussian_kernel (a, na, b, nb, k, sigma,
     & f2py_a_d0, f2py_a_d1, f2py_b_d0, f2py_b_d1, f2py_k_d0, f2py_k_d1)
      integer na
      integer nb
      real(kind=8) sigma
      integer f2py_a_d0
      integer f2py_a_d1
      integer f2py_b_d0
      integer f2py_b_d1
      integer f2py_k_d0
      integer f2py_k_d1
      real(kind=8) a(f2py_a_d0,f2py_a_d1)
      real(kind=8) b(f2py_b_d0,f2py_b_d1)
      real(kind=8) k(f2py_k_d0,f2py_k_d1)
      interface
      subroutine fgaussian_kernel(a,na,b,nb,k,sigma) 
          real(kind=8), dimension(:,:),intent(in) :: a
          integer, intent(in) :: na
          real(kind=8), dimension(:,:),intent(in) :: b
          integer, intent(in) :: nb
          real(kind=8), dimension(:,:),intent(inout) :: k
          real(kind=8), intent(in) :: sigma
      end subroutine fgaussian_kernel
      end interface
      call fgaussian_kernel(a, na, b, nb, k, sigma)
      end


      subroutine f2pywrapflaplacian_kernel (a, na, b, nb, k, sigma
     &, f2py_a_d0, f2py_a_d1, f2py_b_d0, f2py_b_d1, f2py_k_d0, f2py_k_d1
     &)
      integer na
      integer nb
      real(kind=8) sigma
      integer f2py_a_d0
      integer f2py_a_d1
      integer f2py_b_d0
      integer f2py_b_d1
      integer f2py_k_d0
      integer f2py_k_d1
      real(kind=8) a(f2py_a_d0,f2py_a_d1)
      real(kind=8) b(f2py_b_d0,f2py_b_d1)
      real(kind=8) k(f2py_k_d0,f2py_k_d1)
      interface
      subroutine flaplacian_kernel(a,na,b,nb,k,sigma) 
          real(kind=8), dimension(:,:),intent(in) :: a
          integer, intent(in) :: na
          real(kind=8), dimension(:,:),intent(in) :: b
          integer, intent(in) :: nb
          real(kind=8), dimension(:,:),intent(inout) :: k
          real(kind=8), intent(in) :: sigma
      end subroutine flaplacian_kernel
      end interface
      call flaplacian_kernel(a, na, b, nb, k, sigma)
      end


      subroutine f2pywrapflinear_kernel (a, na, b, nb, k, f2py_a_d
     &0, f2py_a_d1, f2py_b_d0, f2py_b_d1, f2py_k_d0, f2py_k_d1)
      integer na
      integer nb
      integer f2py_a_d0
      integer f2py_a_d1
      integer f2py_b_d0
      integer f2py_b_d1
      integer f2py_k_d0
      integer f2py_k_d1
      real(kind=8) a(f2py_a_d0,f2py_a_d1)
      real(kind=8) b(f2py_b_d0,f2py_b_d1)
      real(kind=8) k(f2py_k_d0,f2py_k_d1)
      interface
      subroutine flinear_kernel(a,na,b,nb,k) 
          real(kind=8), dimension(:,:),intent(in) :: a
          integer, intent(in) :: na
          real(kind=8), dimension(:,:),intent(in) :: b
          integer, intent(in) :: nb
          real(kind=8), dimension(:,:),intent(inout) :: k
      end subroutine flinear_kernel
      end interface
      call flinear_kernel(a, na, b, nb, k)
      end


      subroutine f2pywrapfmatern_kernel_l2 (a, na, b, nb, k, sigma
     &, order, f2py_a_d0, f2py_a_d1, f2py_b_d0, f2py_b_d1, f2py_k_d0, f2
     &py_k_d1)
      integer na
      integer nb
      real(kind=8) sigma
      integer order
      integer f2py_a_d0
      integer f2py_a_d1
      integer f2py_b_d0
      integer f2py_b_d1
      integer f2py_k_d0
      integer f2py_k_d1
      real(kind=8) a(f2py_a_d0,f2py_a_d1)
      real(kind=8) b(f2py_b_d0,f2py_b_d1)
      real(kind=8) k(f2py_k_d0,f2py_k_d1)
      interface
      subroutine fmatern_kernel_l2(a,na,b,nb,k,sigma,order) 
          real(kind=8), dimension(:,:),intent(in) :: a
          integer, intent(in) :: na
          real(kind=8), dimension(:,:),intent(in) :: b
          integer, intent(in) :: nb
          real(kind=8), dimension(:,:),intent(inout) :: k
          real(kind=8), intent(in) :: sigma
          integer, intent(in) :: order
      end subroutine fmatern_kernel_l2
      end interface
      call fmatern_kernel_l2(a, na, b, nb, k, sigma, order)
      end


      subroutine f2pywrapfsargan_kernel (a, na, b, nb, k, sigma, g
     &ammas, ng, f2py_a_d0, f2py_a_d1, f2py_b_d0, f2py_b_d1, f2py_k_d0, 
     &f2py_k_d1, f2py_gammas_d0)
      integer na
      integer nb
      real(kind=8) sigma
      integer ng
      integer f2py_a_d0
      integer f2py_a_d1
      integer f2py_b_d0
      integer f2py_b_d1
      integer f2py_k_d0
      integer f2py_k_d1
      integer f2py_gammas_d0
      real(kind=8) a(f2py_a_d0,f2py_a_d1)
      real(kind=8) b(f2py_b_d0,f2py_b_d1)
      real(kind=8) k(f2py_k_d0,f2py_k_d1)
      real(kind=8) gammas(f2py_gammas_d0)
      interface
      subroutine fsargan_kernel(a,na,b,nb,k,sigma,gammas,ng) 
          real(kind=8), dimension(:,:),intent(in) :: a
          integer, intent(in) :: na
          real(kind=8), dimension(:,:),intent(in) :: b
          integer, intent(in) :: nb
          real(kind=8), dimension(:,:),intent(inout) :: k
          real(kind=8), intent(in) :: sigma
          real(kind=8), dimension(:),intent(in) :: gammas
          integer, intent(in) :: ng
      end subroutine fsargan_kernel
      end interface
      call fsargan_kernel(a, na, b, nb, k, sigma, gammas, ng)
      end

